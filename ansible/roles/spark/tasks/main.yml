---

- name: Push boto config
  template:
    src: boto.cfg.j2
    dest: /etc/boto.cfg

- name: Install boto3, for ec2_instance_facts
  pip:
    name: boto3

- name: Get master facts
  register: master
  ec2_instance_facts:
    region: '{{ ec2_region }}'
    filters:
      instance-state-name: running
      'tag:mit': spark-master

- name: Master host
  set_fact:
    spark_master_host:
      '{{ master.instances[0].private_dns_name }}'

- name: Worker count
  set_fact:
    spark_worker_count:
      '{{ groups["tag_mit_spark_worker"] | length }}'

- name: Worker CPU count
  set_fact:
    spark_worker_vcpus:
      '{{ hostvars[groups["tag_mit_spark_worker"][0]]
      ["ansible_processor_vcpus"] }}'

- name: Create config directory
  file:
    path: /etc/spark
    state: directory

- name: Render configs
  template:
    src: '{{ item }}.j2'
    dest: /etc/spark/{{ item }}
  with_items:
    - spark-defaults.conf
    - spark-env.sh

- name: Run master
  when: '"tag_mit_spark_master" in group_names'
  docker_container:
    name: master
    image: dclure/twitter-dev
    command: spark-class org.apache.spark.deploy.master.Master
    state: started
    restart: true
    volumes:
      - /etc/spark:/opt/spark-2.2.0/conf
      - /mnt:/mnt
    ports:
      - '8080:8080'
      - '7077:7077'

- name: Run workers
  when: '"tag_mit_spark_worker" in group_names'
  docker_container:
    name: worker
    image: dclure/twitter-dev
    command:
      'spark-class org.apache.spark.deploy.worker.Worker
      spark://{{ spark_master_host }}:7077'
    state: started
    restart: true
    volumes:
      - /etc/spark:/opt/spark-2.2.0/conf
      - /mnt:/mnt
    ports:
      - '8081:8081'
